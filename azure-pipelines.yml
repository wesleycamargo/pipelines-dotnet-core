# Build ASP.NET Core project using Azure Pipelines
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core?view=vsts

pool:
  vmImage: 'Ubuntu 16.04'
  
variables:
  buildConfiguration: 'Release'

steps:
# - script: |
#     dotnet build --configuration $(buildConfiguration)
#     dotnet test dotnetcore-tests --configuration $(buildConfiguration) --logger trx
#     dotnet publish --configuration $(buildConfiguration) --output $BUILD_ARTIFACTSTAGINGDIRECTORY

- task: DotNetCoreCLI@2
  inputs:
    command: test
    arguments: 'dotnetcore-tests --configuration $(buildConfiguration) --logger trx'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1

# - task: AzureRmWebAppDeployment@3
#   inputs:
#     azureSubscription: '<Azure service connection>'
#     WebAppName: '<Name of web app>'
#     Package: $(System.ArtifactsDirectory)/**/*.zip

- task: AzureRmWebAppDeployment@4
  inputs:
    connectionType: 'AzureRM' # Options: azureRM, publishProfile
    azureSubscription: 'a928ee33-003b-4e69-b464-a9e1165f3219' # Required when connectionType == AzureRM
    #publishProfilePath: '$(System.DefaultWorkingDirectory)/**/*.pubxml' # Required when connectionType == PublishProfile
    #publishProfilePassword: # Required when connectionType == PublishProfile
    appType: 'webApp' # Required when connectionType == AzureRM# Options: webApp, webAppLinux, webAppContainer, functionApp, functionAppContainer, apiApp, mobileApp
    webAppName: 'webApp-DemoGitHub' # Required when connectionType == AzureRM
    #deployToSlotOrASE: false # Optional
    #resourceGroupName: # Required when deployToSlotOrASE == True
    #slotName: 'production' # Required when deployToSlotOrASE == True
    #dockerNamespace: # Required when appType == WebAppContainer || WebAppkind == FunctionAppContainer
    #dockerRepository: # Required when appType == WebAppContainer || WebAppkind == FunctionAppContainer
    #dockerImageTag: # Optional
    #virtualApplication: # Optional
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip' # Required when connectionType == PublishProfile || WebAppKind == WebApp || WebAppKind == ApiApp || WebAppKind == FunctionApp || WebAppKind == MobileApp || WebAppKind == WebAppLinux
    #runtimeStack: # Required when appType == WebAppLinux
    #startupCommand: # Optional
    #scriptType: # Optional. Options: , inline Script, file Path
    #inlineScript: ':: You can provide your deployment commands here. One command per line.' # Required when scriptType == Inline Script
    #scriptPath: # Required when scriptType == File Path
    #webConfigParameters: # Optional
    #appSettings: # Optional
    #configurationSettings: # Optional
    #enableCustomDeployment: false # Optional
    #deploymentType: 'webDeploy' # Required when enableCustomDeployment == True# Options: webDeploy, zipDeploy, runFromZip
    #takeAppOfflineFlag: true # Optional
    #setParametersFile: # Optional
    #removeAdditionalFilesFlag: false # Optional
    #excludeFilesFromAppDataFlag: true # Optional
    #additionalArguments: '-retryAttempts:6 -retryInterval:10000' # Optional
    #renameFilesFlag: true # Optional
    #enableXmlTransform: # Optional
    #enableXmlVariableSubstitution: # Optional
    #jSONFiles: # Optiona